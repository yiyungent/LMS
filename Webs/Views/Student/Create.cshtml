@using Webs.Extensions
@model Domain.Student
@{
    ViewBag.Title = "Create";
}

<link href="~/dist/layui/css/layui.css" rel="stylesheet" />

<div style="text-align: center;">
    <button class="layui-btn layui-btn-sm" onclick="onSubmit()">保存</button>
    <button class="layui-btn layui-btn-sm" onclick="onCancel()">取消</button>
</div>
<form class="layui-form">
    <div class="layui-form-item">
        @Html.LabelFor(model => model.Name, new { @class = "layui-form-label" })
        <div class="layui-input-block">
            @Html.TextBoxFor(model => model.Name, new { @class = "layui-input", placeholder = "请输入", autocomplete = "off" })
        </div>
    </div>
    <div class="layui-form-item">
        @Html.LabelFor(model => model.StudyNumber, new { @class = "layui-form-label" })
        <div class="layui-input-block">
            @Html.TextBoxFor(model => model.StudyNumber, new { @class = "layui-input", placeholder = "请输入", autocomplete = "off" })
        </div>
    </div>
    <div class="layui-form-item">
        @Html.LabelFor(model => model.Mobile, new { @class = "layui-form-label" })
        <div class="layui-input-block">
            @Html.TextBoxFor(model => model.Mobile, new { @class = "layui-input", placeholder = "请输入", autocomplete = "off" })
        </div>
    </div>
    <div class="layui-form-item">
        @Html.LabelFor(model => model.Sex, new { @class = "layui-form-label" })
        <div class="layui-input-block">
            @Html.RadioButtonList("Sex", (IList<SelectListItem>)ViewBag.rblSex, true)
        </div>
    </div>
    <div class="layui-form-item">
        @Html.LabelFor(model => model.Clazz, new { @class = "layui-form-label" })
        <div class="layui-input-block">
          @*<select name="Clazz">
            @foreach (var keyValue in (Dictionary<int, string>)ViewBag.ddlClazz)
            {
                <option value="@keyValue.Key">@keyValue.Value</option>
            }
          </select>*@
            @Html.DropDownListFor(model => model.Clazz.ID, (IList<SelectListItem>)ViewBag.ddlClazz)
        </div>
    </div>
</form>

<script src="~/dist/layui/layui.js"></script>
<script src="~/js/jquery-1.9.1.min.js"></script>
<script src="~/js/jquery-migrate-1.1.1.js"></script>
<script>
    layui.use(['form', 'layer'], function () {
        form = layui.form
        , layer = layui.layer;
    });

    function onSubmit() {
        // 1.验证输入
        // 1.1 姓名
        if ($("#Name").val().trim() == "") {
            layer.msg("请输入姓名")
            $("#Name").focus();
            return;
        }
        if (getByteLen($("#Name").val().trim()) > 30) {
            layer.msg("姓名不能超过30个字符");
            $("#Name").focus();
            return;
        }
        // 1.2 学号
        if ($("#StudyNumber").val().trim() == "") {
            layer.msg("请输入学号");
            $("#StudyNumber").focus();
            return;
        }
        if (getByteLen($("#StudyNumber").val().trim()) > 30) {
            layer.msg("学号不能超过30个字符");
            $("#StudyNumber").focus();
            return;
        }
        // 1.2 手机号
        if ($("#Mobile").val().trim() == "") {
            layer.msg("请输入手机号");
            $("#Mobile").focus();
            return;
        }
        if (getByteLen($("#Mobile").val().trim()) > 11) {
            layer.msg("手机号不能超过11个字符");
            $("#Mobile").focus();
            return;
        }
        // 2.提交数据
        $.ajax({
            type: "post",
            url: "/Student/Create",
            data: $("form").serialize(),
            dataType: "text",
            success: function (rdata) {
                if (rdata == "ok") {
                    // 提交成功
                    // 3.关闭弹窗
                    parent.layer.close(parent.layer.index);
                } else {
                    // 提交失败
                    layer.msg(rdata);
                }
            }
        });
    }

    function onCancel() {
        // 关闭弹窗
        parent.layer.close(parent.layer.index);
    }

    // 求字符串长度——汉字算2
    function getByteLen(val) {
        var len = 0;
        for (var i = 0; i < val.length; i++) {
            var a = val.charAt(i);
            if (a.match(/[^\x00-\xff]/ig) != null) {
                len += 2;
            } else {
                len += 1;
            }
        }
        return len;
    }
</script>